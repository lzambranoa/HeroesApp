{"version":3,"sources":["auth/authContext.js","types/types.js","auth/authReducer.js","components/login/LoginScreen.js","data/heroes.js","components/heroes/HeroCard.js","components/heroes/HeroList.js","selectors/getHeroesByPublisher.js","components/dc/DcScreen.js","components/heroes/HeroScreen.js","selectors/getHeroById.js","components/marvel/MarvelScreen.js","components/search/SearchScreen.js","hooks/useForm.js","selectors/getHeroesByName.js","components/ui/NavBar.js","routers/DashboardRoutes.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","HeroesApp.js","index.js"],"names":["AuthContext","createContext","types","authReducer","state","action","type","payload","logged","LoginScreen","history","dispatch","useContext","className","onClick","lastPath","localStorage","getItem","name","replace","heroes","HeroCard","id","superhero","alter_ego","first_appearance","characters","style","maxWidth","src","alt","to","HeroList","publisher","useMemo","includes","Error","filter","hero","getHeroesByPublisher","map","DcScreen","HeroScreen","heroeId","useParams","find","length","push","goBack","MarvelScreen","SearchScreen","location","useLocation","queryString","parse","search","q","initialState","useState","values","setValues","target","value","useForm","searchText","formValues","handleInputChange","heroesFiltered","toLocaleLowerCase","getHeroesByName","onSubmit","e","preventDefault","placeholder","autoComplete","onChange","Navbar","user","useHistory","activeClassName","exact","DashboardRoutes","path","component","PrivateRoute","isAuthenticated","Component","rest","setItem","pathname","props","PublicRoute","AppRouter","init","JSON","HeroesApp","useReducer","useEffect","stringify","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b58db24b.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext();","export const types = {\r\n    login: '[auth] login',\r\n    logout: '[auth] logout'\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\nexport const authReducer = ( state = {}, action ) => {\r\n\r\n    switch( action.type ) {\r\n        case types.login:\r\n            return {\r\n                ...action.payload,\r\n                logged: true\r\n            }\r\n        case types.logout:\r\n            return {\r\n                logged: false \r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { useContext } from 'react';\r\nimport { AuthContext } from '../../auth/authContext';\r\nimport { types } from '../../types/types';\r\n\r\nexport const LoginScreen = ({ history }) => {\r\n\r\n    const { dispatch } = useContext( AuthContext );\r\n\r\n    const handleLogin = () => {\r\n        const lastPath = localStorage.getItem('lastPath') || '/';\r\n        dispatch({\r\n            type: types.login,\r\n            payload: {\r\n                name: 'Leonardo'\r\n            }\r\n        })\r\n        history.replace(lastPath);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-5\"> \r\n            <h1>Login</h1>\r\n            <hr />\r\n\r\n            <button\r\n                className=\"btn btn-primary\"\r\n                onClick={ handleLogin }\r\n            >\r\n                Login\r\n            </button>\r\n        </div>\r\n    )\r\n}","export const heroes = [\r\n    {\r\n        'id': 'dc-batman',\r\n        'superhero': 'Batman',\r\n        'publisher': 'DC Comics',\r\n        'alter_ego': 'Bruce Wayne',\r\n        'first_appearance': 'Detective Comics #27',\r\n        'characters': 'Bruce Wayne'\r\n    },\r\n    {\r\n        'id': 'dc-superman',\r\n        'superhero': 'Superman',\r\n        'publisher': 'DC Comics',\r\n        'alter_ego': 'Kal-El',\r\n        'first_appearance': 'Action Comics #1',\r\n        'characters': 'Kal-El'\r\n    },\r\n    {\r\n        'id': 'dc-flash',\r\n        'superhero': 'Flash',\r\n        'publisher': 'DC Comics',\r\n        'alter_ego': 'Jay Garrick',\r\n        'first_appearance': 'Flash Comics #1',\r\n        'characters': 'Jay Garrick, Barry Allen, Wally West, Bart Allen'\r\n    },\r\n    {\r\n        'id': 'dc-green',\r\n        'superhero': 'Green Lantern',\r\n        'publisher': 'DC Comics',\r\n        'alter_ego': 'Alan Scott',\r\n        'first_appearance': 'All-American Comics #16',\r\n        'characters': 'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz'\r\n    },\r\n    {\r\n        'id': 'dc-arrow',\r\n        'superhero': 'Green Arrow',\r\n        'publisher': 'DC Comics',\r\n        'alter_ego': 'Oliver Queen',\r\n        'first_appearance': 'More Fun Comics #73',\r\n        'characters': 'Oliver Queen'\r\n    },\r\n    {\r\n        'id': 'dc-wonder',\r\n        'superhero': 'Wonder Woman',\r\n        'publisher': 'DC Comics',\r\n        'alter_ego': 'Princess Diana',\r\n        'first_appearance': 'All Star Comics #8',\r\n        'characters': 'Princess Diana'\r\n    },\r\n    {\r\n        'id': 'dc-martian',\r\n        'superhero': 'Martian Manhunter',\r\n        'publisher': 'DC Comics',\r\n        'alter_ego': 'J\\'onn J\\'onzz',\r\n        'first_appearance': 'Detective Comics #225',\r\n        'characters': 'Martian Manhunter'\r\n    },\r\n    {\r\n        'id': 'dc-robin',\r\n        'superhero': 'Robin/Nightwing',\r\n        'publisher': 'DC Comics',\r\n        'alter_ego': 'Dick Grayson',\r\n        'first_appearance': 'Detective Comics #38',\r\n        'characters': 'Dick Grayson'\r\n    },\r\n    {\r\n        'id': 'dc-blue',\r\n        'superhero': 'Blue Beetle',\r\n        'publisher': 'DC Comics',\r\n        'alter_ego': 'Dan Garret',\r\n        'first_appearance': 'Mystery Men Comics #1',\r\n        'characters': 'Dan Garret, Ted Kord, Jaime Reyes'\r\n    },\r\n    {\r\n        'id': 'dc-black',\r\n        'superhero': 'Black Canary',\r\n        'publisher': 'DC Comics',\r\n        'alter_ego': 'Dinah Drake',\r\n        'first_appearance': 'Flash Comics #86',\r\n        'characters': 'Dinah Drake, Dinah Lance'\r\n    },\r\n    {\r\n        'id': 'marvel-spider',\r\n        'superhero': 'Spider Man',\r\n        'publisher': 'Marvel Comics',\r\n        'alter_ego': 'Peter Parker',\r\n        'first_appearance': 'Amazing Fantasy #15',\r\n        'characters': 'Peter Parker'\r\n    },\r\n    {\r\n        'id': 'marvel-captain',\r\n        'superhero': 'Captain America',\r\n        'publisher': 'Marvel Comics',\r\n        'alter_ego': 'Steve Rogers',\r\n        'first_appearance': 'Captain America Comics #1',\r\n        'characters': 'Steve Rogers'\r\n    },\r\n    {\r\n        'id': 'marvel-iron',\r\n        'superhero': 'Iron Man',\r\n        'publisher': 'Marvel Comics',\r\n        'alter_ego': 'Tony Stark',\r\n        'first_appearance': 'Tales of Suspense #39',\r\n        'characters': 'Tony Stark'\r\n    },\r\n    {\r\n        'id': 'marvel-thor',\r\n        'superhero': 'Thor',\r\n        'publisher': 'Marvel Comics',\r\n        'alter_ego': 'Thor Odinson',\r\n        'first_appearance': 'Journey into Myster #83',\r\n        'characters': 'Thor Odinson'\r\n    },\r\n    {\r\n        'id': 'marvel-hulk',\r\n        'superhero': 'Hulk',\r\n        'publisher': 'Marvel Comics',\r\n        'alter_ego': 'Bruce Banner',\r\n        'first_appearance': 'The Incredible Hulk #1',\r\n        'characters': 'Bruce Banner'\r\n    },\r\n    {\r\n        'id': 'marvel-wolverine',\r\n        'superhero': 'Wolverine',\r\n        'publisher': 'Marvel Comics',\r\n        'alter_ego': 'James Howlett',\r\n        'first_appearance': 'The Incredible Hulk #180',\r\n        'characters': 'James Howlett'\r\n    },\r\n    {\r\n        'id': 'marvel-daredevil',\r\n        'superhero': 'Daredevil',\r\n        'publisher': 'Marvel Comics',\r\n        'alter_ego': 'Matthew Michael Murdock',\r\n        'first_appearance': 'Daredevil #1',\r\n        'characters': 'Matthew Michael Murdock'\r\n    },\r\n    {\r\n        'id': 'marvel-hawkeye',\r\n        'superhero': 'Hawkeye',\r\n        'publisher': 'Marvel Comics',\r\n        'alter_ego': 'Clinton Francis Barton',\r\n        'first_appearance': 'Tales of Suspense #57',\r\n        'characters': 'Clinton Francis Barton'\r\n    },\r\n    {\r\n        'id': 'marvel-cyclops',\r\n        'superhero': 'Cyclops',\r\n        'publisher': 'Marvel Comics',\r\n        'alter_ego': 'Scott Summers',\r\n        'first_appearance': 'X-Men #1',\r\n        'characters': 'Scott Summers'\r\n    },\r\n    {\r\n        'id': 'marvel-silver',\r\n        'superhero': 'Silver Surfer',\r\n        'publisher': 'Marvel Comics',\r\n        'alter_ego': 'Norrin Radd',\r\n        'first_appearance': 'The Fantastic Four #48',\r\n        'characters': 'Norrin Radd'\r\n    }\r\n]","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport const HeroCard = ({\r\n    id,\r\n    superhero,\r\n    alter_ego,\r\n    first_appearance,\r\n    characters,\r\n}) => {\r\n\r\n    return (\r\n        <div className=\"card ms-3 border-primary\" style={ {  maxWidth: 540  } } >\r\n            <div className=\"row no-gutters\" >\r\n                <div className=\"col-md-4\" >\r\n                    <img  src={`./assets/heroes/${ id }.jpg`} className=\"card-img\" alt={ superhero } />\r\n                </div>\r\n                <div className=\"col-md-8\">\r\n                    <div className=\"card-body\" >\r\n                        <h5 className=\"card-title\" >{superhero}</h5>\r\n                        <p className=\"card-text\" >\r\n                            {alter_ego}\r\n                        </p>\r\n\r\n                        {\r\n                            ( alter_ego !== characters )\r\n                                && <p className=\"card-text\" > {characters} </p>\r\n                        }\r\n\r\n                        <p className=\"card-text\" >\r\n                            <small className=\"text-muted\"> {first_appearance} </small>\r\n                        </p>\r\n                        \r\n                        <Link to={`./hero/${ id }`} >\r\n                            Mas...\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useMemo } from 'react';\r\nimport { getHeroesByPublisher } from '../../selectors/getHeroesByPublisher';\r\nimport { HeroCard } from './HeroCard';\r\n\r\nexport const HeroList = ({ publisher }) => {\r\n\r\n    const heroes = useMemo(() =>  getHeroesByPublisher(publisher), [ publisher ] );\r\n    \r\n\r\n\r\n    return (\r\n        <div className=\"card-columns animate__animated animate__fadeIn\" >\r\n            {\r\n                heroes.map(hero => (\r\n                    <HeroCard\r\n                        key={hero.id}\r\n                        {...hero}\r\n                    />\r\n                ))\r\n\r\n            }  \r\n        </div>\r\n    )\r\n}","import { heroes } from '../data/heroes';\r\n\r\nexport const getHeroesByPublisher = ( publisher ) => {\r\n\r\n    const validPublishers = ['DC Comics', 'Marvel Comics'];\r\n\r\n    if ( !validPublishers.includes( publisher ) ) {\r\n        throw new Error(`Publisher \"${ publisher }\" no es correcto`);\r\n    }\r\n\r\n    return heroes.filter( hero => hero.publisher === publisher );\r\n\r\n}","import React from 'react';\r\nimport { HeroList } from '../heroes/HeroList';\r\n\r\nexport const DcScreen = () => {\r\n\r\n    return(\r\n        <div>\r\n            <h1>DC Comics</h1>\r\n            <hr />\r\n\r\n            <HeroList\r\n                publisher={'DC Comics'}\r\n            />\r\n        </div>\r\n    )\r\n}","import React, { useMemo } from 'react';\r\nimport { Redirect, useParams } from 'react-router-dom';\r\nimport { getHeroesById } from '../../selectors/getHeroById';\r\n\r\nexport const HeroScreen = ({ history }) => {\r\n\r\n    const { heroeId } = useParams();\r\n\r\n    const hero = useMemo(() => getHeroesById(heroeId), [ heroeId ]);\r\n    \r\n\r\n    // esta linea nos regresa al root cuando enviamos un id que no exita\r\n    // y nos reteorn un undefined\r\n    if ( !hero ) {\r\n        return <Redirect to=\"/\" /> \r\n    }\r\n\r\n    const handleReturn = () => {\r\n\r\n        if( history.length <= 2 ){\r\n            history.push('/');\r\n        } else {\r\n            history.goBack();\r\n        }\r\n    }\r\n\r\n    const {\r\n        superhero,\r\n        alter_ego,\r\n        first_appearance,\r\n        publisher,\r\n        characters,\r\n    } = hero;\r\n\r\n\r\n    return (\r\n        <div className=\"row mt-5\">\r\n            <div className=\"col-4\">\r\n                <img\r\n                    src={`../assets/heroes/${heroeId}.jpg`}\r\n                    alt={ superhero }\r\n                    className=\"img-thumbnail animate__animated animate__fadeInLeft\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"col-8\" >\r\n                <h3> {superhero} </h3>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item\" > Alter ego: { alter_ego } </li>\r\n                    <li className=\"list-group-item\" > Publisher: { publisher } </li>\r\n                    <li className=\"list-group-item\" > First appearance: { first_appearance } </li>\r\n                </ul>\r\n\r\n                <h5> Characters </h5>\r\n                <p> {characters} </p>\r\n\r\n                <button \r\n                onClick={handleReturn} \r\n                className=\"btn btn-outline-info\" >\r\n                    Return\r\n                </button>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}","import { heroes } from \"../data/heroes\";\r\n\r\nexport const getHeroesById = ( id ) => {\r\n\r\n    // Retorna el primer item encontrado\r\n    return heroes.find( hero => hero.id === id);\r\n\r\n}","import React from 'react';\r\nimport { HeroList } from '../heroes/HeroList';\r\n\r\nexport const MarvelScreen = () => {\r\n\r\n    return(\r\n        <div>\r\n            <h1>Marvel Heroes</h1>\r\n            <hr />\r\n\r\n            <HeroList\r\n                publisher={'Marvel Comics'}\r\n            />\r\n        </div>\r\n    )\r\n}","import React, { useMemo } from 'react';\r\nimport queryString from 'query-string';\r\n\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { HeroCard } from '../heroes/HeroCard';\r\nimport { getHeroesByName } from '../../selectors/getHeroesByName';\r\n\r\n\r\nexport const SearchScreen = ({ history }) => {\r\n\r\n    const location = useLocation();\r\n    const { q = '' } = queryString.parse(location.search);\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        searchText: q\r\n    });\r\n\r\n    const { searchText } = formValues;\r\n\r\n    const heroesFiltered = useMemo(() => getHeroesByName(q), [q]);\r\n\r\n    const handleSearch = (e) => {\r\n        e.preventDefault();\r\n        history.push(`?q=${searchText}`);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Search Screen</h1>\r\n            <hr />\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-5\">\r\n                    <h4> Search Form </h4>\r\n                    <hr />\r\n\r\n                    <form onSubmit={handleSearch} >\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Find your hero\"\r\n                            className=\"form-control\"\r\n                            name=\"searchText\"\r\n                            autoComplete=\"off\"\r\n                            value={searchText}\r\n                            onChange={handleInputChange}\r\n                        />\r\n\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn m-1 btn-block btn-outline-primary\"\r\n                        >\r\n                            Search\r\n                    </button>\r\n                    </form>\r\n                </div>\r\n                <div className=\"col-7\" >\r\n                    <h4> Results </h4>\r\n                    <hr />\r\n\r\n                    {\r\n                        (q === '')\r\n                        &&\r\n                        <div className=\"alert alert-info\" >\r\n                            Search a hero...\r\n                    </div>\r\n                    }\r\n\r\n                    {\r\n                        (q !== '' && heroesFiltered.length === 0)\r\n                        &&\r\n                        <div className=\"alert alert-danger\" >\r\n                            There is not a hero with {q}\r\n                        </div>\r\n                    }\r\n\r\n                    {\r\n                        heroesFiltered.map(hero => (\r\n                            <HeroCard\r\n                                key={hero.id}\r\n                                {...hero}\r\n                            />\r\n                        ))\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useState } from \"react\"\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState)\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        \r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        })\r\n    }\r\n\r\n    return [ values, handleInputChange, reset];\r\n}","import { heroes } from \"../data/heroes\";\r\n\r\n\r\nexport const getHeroesByName = ( name = '' ) => {\r\n\r\n    if( name === ''){\r\n        return [];\r\n    }\r\n    name = name.toLocaleLowerCase();\r\n    return heroes.filter( hero => hero.superhero.toLocaleLowerCase().includes( name));\r\n}","import React, { useContext } from 'react'\r\nimport { Link, NavLink, useHistory } from 'react-router-dom'\r\nimport { AuthContext } from '../../auth/authContext'\r\nimport { types } from '../../types/types';\r\n\r\nexport const Navbar = () => {\r\n\r\n    // buscamos acceso al context\r\n    const { user:{name}, dispatch } = useContext(AuthContext);\r\n    const history = useHistory();\r\n\r\n    const handleLogout = () => {\r\n\r\n        history.replace('/login');\r\n        dispatch({\r\n            type: types.logout,\r\n        });\r\n    }\r\n    \r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n            \r\n            <Link \r\n                className=\"navbar-brand\" \r\n                to=\"/\"\r\n            >\r\n                Asociaciones\r\n            </Link>\r\n\r\n            <div className=\"navbar-collapse\">\r\n                <div className=\"navbar-nav\">\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/marvel\"\r\n                    >\r\n                        Marvel\r\n                    </NavLink>\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/dc\"\r\n                    >\r\n                        DC\r\n                    </NavLink>\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/search\"\r\n                    >\r\n                        Search\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n\r\n                    <span className=\"nav-item nav-link text-info\">\r\n                        {name}\r\n                    </span>\r\n\r\n                    <button\r\n                        className=\"nav-item nav-link btn\" \r\n                        onClick={handleLogout}\r\n                    >\r\n                        Logout\r\n                    </button>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport { DcScreen } from '../components/dc/DcScreen';\r\nimport { HeroScreen } from '../components/heroes/HeroScreen';\r\nimport { MarvelScreen } from '../components/marvel/MarvelScreen';\r\nimport { SearchScreen } from '../components/search/SearchScreen';\r\nimport { Navbar } from '../components/ui/NavBar';\r\n\r\n\r\nexport const DashboardRoutes = () => {\r\n\r\n    return(\r\n        <>\r\n            <Navbar />\r\n\r\n            <div className=\"container mt-3\" >\r\n                <Switch>\r\n                    <Route exact path=\"/marvel\" component={ MarvelScreen } /> \r\n                    <Route exact path=\"/hero/:heroeId\" component={ HeroScreen } /> \r\n                    <Route exact path=\"/dc/\" component={ DcScreen } /> \r\n                    <Route exact path=\"/search\" component={ SearchScreen } /> \r\n                    \r\n                    {/* Redirect se usa para redireccionar en caso de no estar en las otras rutas */}\r\n                    <Redirect to=\"/marvel\" />  \r\n                </Switch>\r\n            </div>\r\n        \r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    localStorage.setItem('lastPath', rest.location.pathname);\r\n\r\n    \r\n    return (\r\n        <Route {...rest}\r\n            component={(props) =>(\r\n               ( isAuthenticated )\r\n                ? <Component {...props} /> \r\n                : <Redirect to='/login' />\r\n            )}        \r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    \r\n    return (\r\n        <Route {...rest}\r\n            component={(props) =>(\r\n               ( !isAuthenticated )\r\n                ? <Component {...props} /> \r\n                : <Redirect to=\"/\" />\r\n            )}        \r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useContext } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n} from \"react-router-dom\";\r\nimport { AuthContext } from '../auth/authContext';\r\nimport { LoginScreen } from '../components/login/LoginScreen';\r\nimport { DashboardRoutes } from './DashboardRoutes';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\n\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const { user } = useContext(AuthContext);\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute \r\n                    exact path=\"/login\" \r\n                    component={LoginScreen} \r\n                    isAuthenticated={user.logged}\r\n                    />\r\n\r\n                    <PrivateRoute\r\n                        path=\"/\"\r\n                        component={DashboardRoutes}\r\n                        isAuthenticated={user.logged}\r\n                    />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}","import React, { useEffect, useReducer } from 'react';\r\nimport { AuthContext } from './auth/authContext';\r\nimport { authReducer } from './auth/authReducer';\r\nimport { AppRouter } from './routers/AppRouter';\r\n\r\n// Esta linea de código me perimte ver su existe el item user en el \r\n// localStarage, de lo contrario me regresa un logged en false\r\nconst init = () => {\r\n    return JSON.parse(localStorage.getItem('user')) || { logged: false }\r\n}\r\n\r\nexport const HeroesApp = () => {\r\n\r\n    const [user, dispatch] = useReducer(authReducer, {}, init);\r\n\r\n    /* Establecemos los valores cuando el user cambia*/\r\n    useEffect(() => {\r\n        localStorage.setItem( 'user', JSON.stringify(user));\r\n    }, [user])\r\n\r\n    return (\r\n\r\n        <AuthContext.Provider value={{user, dispatch}} >\r\n            <AppRouter />\r\n        </AuthContext.Provider>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HeroesApp } from './HeroesApp';\n\nReactDOM.render(\n\n    <HeroesApp />,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}